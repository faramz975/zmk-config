#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define DOT 4

&lt {
    quick-tap-ms = <200>;
};

&mt {
    quick-tap-ms = <200>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  SUP/TAB    |  (  |  )  |  .   |  P   |  Y   |  LOWER   |                                    |  LOWER   |  F   |  G    |  C    |  R   |   L   |   SUP/BACKSPACE  |
// |  SHIFT/ESC  |  A  |  O  |  E   |  U   |  I   |ALT/SPACE |                                    |ALT/SPACE |  D   |  H    |  T    |  N   |   S   |   SHIFT/ENTER  |
// |  CTRL/DELET |  ;  |  Q  |  J   |  K   |  X   |  RAISE   |                                    |  RAISE   |  B   |  M    |  W    |  V   |   Z   | CTRL/DELETE |

            bindings = <
                &mt LGUI TAB    &kp LPAR  &kp RPAR  &kp PERIOD  &kp P  &kp Y  &mo LWR         &mo LWR         &kp F  &kp G  &kp C  &kp R  &kp L  &mt LGUI BSPC 
                &mt LSHIFT ESC  &kp A     &kp O     &kp E       &kp U  &kp I  &mt LALT SPACE  &mt LALT SPACE  &kp D  &kp H  &kp T  &kp N  &kp S  &mt LSHIFT RET
                &mt LCTRL DEL   &kp SEMI  &kp Q     &kp J       &kp K  &kp X  &mo RSE         &mo RSE         &kp B  &kp M  &kp W  &kp V  &kp Z  &mt LCTRL DEL
            >;


        };
        raise_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |   {  |   }  |   ,  |   '  |   "  |ADJ_layer|                                        |ADJ_layer|   *  |  7   |   8  |   9  |   -  |     |
// |       |   !  |   @  |   #  |   $  |   %  |         |                                        |         |   /  |  4   |   5  |   6  |   0  |     |
// |       |   :  |   ^  |   ~  |   ?  |   &  |         |                                        |         |   .  |  1   |   2  |   3  |   +  |     |

            bindings = <
                &trans  &kp LBRC   &kp RBRC   &kp COMMA  &kp SQT    &kp DQT    &mo ADJ             &mo ADJ  &kp ASTRK  &kp N7  &kp N8  &kp N9  &kp MINUS  &trans
                &trans  &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT  &trans              &trans   &kp FSLH   &kp N4  &kp N5  &kp N6  &kp N0     &trans
                &trans  &kp COLON  &kp CARET  &kp TILDE  &kp QMARK  &kp AMPS   &trans              &trans   &kp PERIOD    &kp N1  &kp N2  &kp N3  &kp PLUS   &trans
            >;

        };
        lower_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |  [  |   ]  |   ^  |   <  |   >  |         |                                       |         |PSCRN |  F7   |   F8  |   F9  |   _  |     |
// |       |  !  |   <- |   v  |   -> |   %  |         |                                       |         |   \  |  F4   |   F5  |   F6  | F10  |     |
// |       |  :  |   ^  | "|"  |  F11 |  F12 |ADJ_layer|                                       |ADJ_layer|   .  |  F1   |   F2  |   F3  |   =  |     |

            bindings = <
                &trans  &kp LBKT   &kp RBKT   &kp UP     &kp LT     &kp GT     &trans          &trans   &kp PSCRN  &kp F7  &kp F8  &kp F9  &kp UNDER  &trans
                &trans  &kp EXCL   &kp LEFT   &kp DOWN   &kp RIGHT  &kp PRCNT  &trans          &trans   &kp BSLH   &kp F4  &kp F5  &kp F6  &kp F10    &trans
                &trans  &kp COLON  &kp CARET  &kp PIPE  &kp F11    &kp F12    &mo ADJ         &mo ADJ  &kp PERIOD    &kp F1  &kp F2  &kp F3  &kp EQUAL  &trans
            >;

        };
        adjust_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |bootloader|        |        |      |  DOTo  |          |                   |          |      |      |        |        |bootloader|      |
// |       |  BT_CLR  |BT_SEL 0|BT_SEL 1|BT_PRV| BT_NXT |BT_CLR_ALL|                   |BT_CLR_ALL|BT_NXT|BT_PRV|BT_SEL 1|BT_SEL 0|  BT_CLR  |      |
// |  CAPS |sys_reset |        |        |      |        |          |                   |          |      |      |        |        | sys_reset| CAPS |

            bindings = <
                &trans   &bootloader   &none          &none          &none          &tog DOT          &none          &none          &none          &none          &none          &none          &bootloader &trans
                &trans   &bt BT_CLR    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_PRV   &bt BT_NXT   &bt BT_CLR_ALL   &bt BT_CLR_ALL   &bt BT_NXT   &bt BT_PRV   &bt BT_SEL 1   &bt BT_SEL 0   &bt BT_CLR &trans
                &kp CAPS &sys_reset    &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &sys_reset &kp CAPS
            >;

        };
        doto_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |   l   |  q  |   w  |   e  |   r  |   t  |    n    |                                       | DEF  |     |     |     |     |     |     |
// |  caps |  a  |   s  |   d  |   f  |   g  |ALT/SPACE|                                       |      |     |     |     |     |     |     |
// | shift |  z  |   x  |   c  |   v  |   b  |    4    |                                       |      |     |     |     |     |     |     |

            bindings = <
                &kp L  &kp Q    &kp W   &kp E   &kp R    &kp T      &kp N4                &to DEF   &none    &none    &none    &none    &none    &none
                &kp CAPS    &kp A   &kp S   &kp D   &kp F    &kp G      &mt LALT SPACE        &none      &none    &none    &none    &none    &none    &none
                &mt LSHIFT TILDE    &kp Z   &kp X   &kp C    &kp V      &kp B     &kp N       &none      &none    &none    &none    &none    &none    &none
            >;

        };

    };
};
